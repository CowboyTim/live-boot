#!/bin/bash

# the hidd patch for the sixaxis auth enable.
cp $here/$distro/patch-hidd-3.19-pabr3 $tmptargetsquashdir/tmp
chroot $tmptargetsquashdir bash -c '
    cd /tmp/
    apt-get -y install dpkg-dev
    apt-get -y source bluez-utils
    apt-get -y build-dep bluez-utils
    patch bluez-*/compat/hidd.c /tmp/patch-hidd-3.19-pabr3
    cd bluez-*
    dpkg-buildpackage -j4 -rfakeroot
    cd ..
    dpkg -i /tmp/bluez-compat_*.deb /tmp/libbluetooth3_*.deb /tmp/bluez_*.deb
    echo bluez-compat  hold | dpkg --set-selections
    echo bluez         hold | dpkg --set-selections
    echo libbluetooth3 hold | dpkg --set-selections
    apt-get -y remove dpkg-dev --purge
    apt-get -y autoremove --purge
' || exit 1


cp -R $here/$distro/package $tmpdir

# sixaxis pair-over-usb utility + our own freevo package
cp -R $here/$distro/package $tmptargetsquashdir/tmp

# FIXME: Erh, find a better way on doing this..
cp $here/../yaams-git/yaams.py $tmptargetsquashdir/tmp/package/etc/

cp -R $here/$distro/sixpair.c $tmptargetsquashdir/tmp
chroot $tmptargetsquashdir bash -c '
    apt-get -y install libusb-dev
    gcc -o /tmp/package/etc/sixpair /tmp/sixpair.c -lusb
    cd /tmp/package
    dpkg-deb -b . /tmp
    dpkg -i /tmp/playfreevoplay*
    echo playfreevoplay hold | dpkg --set-selections
    apt-get -y remove libusb-dev --purge
    apt-get -y autoremove --purge
' || exit 1

# disable freevo stuff, we're running an upstart script in /etc/event.d
# disable the bluetooth daemon, we're using hidd itself from udev
for s in    bluetooth \
            dkms_autoinstaller \
            policykit \
            mountoverflowtmp \
            keyboard-setup \
            mountall.sh \
            mountall-bootclean.sh \
            mountnfs.sh \
            mountnfs-bootclean.sh \
            checkroot.sh \
            glibc.sh \
            hwclock.sh \
            checkfs.sh \
            console-setup \
            freevo_xserver \
            freevo_recordserver \
            freevo_webserver \
            freevo_rssserver \
            freevo_encodingserver; do
    chroot $tmptargetsquashdir update-rc.d -f $s remove
done
# nasty trick to let freevo shutdown the PC from the user 'freevo'
chmod o+s $tmptargetsquashdir/sbin/{initctl,shutdown,reboot}

# just make sure freevo has all the permissions
chroot $tmptargetsquashdir chown -R freevo /home/freevo

###############################################################################
#
# cleanup from here. Freevo is a blackbox :-)
#
###############################################################################

cleanup_unneeded_packages "$distro"

# remove nvidia related needed build stuff, we're not going to build things on
# the freevo anymore :-). This will break apt-get. We can't remove it with
# apt-get, however it removed glx, and I want that one for lot's of stuff..
chroot $tmptargetsquashdir dpkg --force-all --purge \
    gcc \
    gcc-4.3 \
    cpp \
    cpp-4.3 \
    libc6-dev \
    linux-libc-dev \
    make \
    nvidia-180-kernel-source \
    dkms \
    wireless-crda

# who needs xine if there's mplayer..
chroot $tmptargetsquashdir dpkg --force-all --purge \
    libxine1-x \
    xine-ui \
    libxine1-misc-plugins \
    libxine1-ffmpeg \
    libxine1-console \
    libxine1-bin \
    libxine1

# general stuff
chroot $tmptargetsquashdir dpkg --force-all --purge \
    console-terminus \
    console-setup

# perl only used for fontconfig, and even then, only for docs@install as far as
# I can see?! Having 2 vm's (python and perl) eats diskspace: remove perl, as
# freevo is made in pygame/python which is cool. Sad to remove my mother tongue
# though ;-). Also, we remove the kernel + image (modules), as they are
# allready 'built' for the live iso part.
chroot $tmptargetsquashdir bash -c '
    for f in `dpkg -l|grep "^ii"|grep "perl\|linux-headers"|awk "{print \\$2}"`; do 
        dpkg --force-all --purge $f
    done
'

# hard remove some stuff we never will need ;-)
chroot $tmptargetsquashdir rm -rf /usr/src
chroot $tmptargetsquashdir rm -rf /usr/games
chroot $tmptargetsquashdir rm -rf /usr/share/doc
chroot $tmptargetsquashdir rm -rf /usr/share/man
chroot $tmptargetsquashdir rm -rf /usr/share/man-db
