#!/bin/bash

cp -R $here/$distro/package $tmpdir

# sixaxis pair-over-usb utility
gcc -o $tmpdir/package/etc/sixpair $here/$distro/sixpair.c -lusb

(
    cd $tmpdir/package
    dpkg-deb -b . $tmpdir
    cp $tmpdir/playfreevoplay*.deb $tmptargetsquashdir/tmp
)
chroot $tmptargetsquashdir bash -c 'dpkg -i /tmp/playfreevoplay*' || exit 1

# the hidd patch for the sixaxis auth enable. FIXME: should be in the chrooted
# environment so we would have the correct OS!
(
    cd $tmpdir
    apt-get source bluez-utils
    apt-get build-dep bluez-utils
    patch bluez-*/compat/hidd.c $here/$distro/patch-hidd-3.19-pabr3
    cd bluez-*
    dpkg-buildpackage -j4 -rfakeroot
    cd ..
    cp bluez-compat*.deb $tmptargetsquashdir/tmp || exit 1
) || exit 1

# use bash to do th '*' globbing, don't forget, the '*' is glob-ed by *this*
# shell, which isn't chrooted, and thus has no /tmp/bluez-compat_*
chroot $tmptargetsquashdir bash -c 'dpkg -i /tmp/bluez-compat_*' || exit 1

# disable freevo stuff, we're running an upstart script in /etc/event.d
# disable the bluetooth daemon, we're using hidd itself from udev
for s in    bluetooth \
            dkms_autoinstaller \
            policykit \
            mountoverflowtmp \
            keyboard-setup \
            mountall.sh \
            mountall-bootclean.sh \
            mountkernfs.sh \
            mountnfs.sh \
            mountnfs-bootclean.sh \
            checkroot.sh \
            glibc.sh \
            hwclock.sh \
            checkfs.sh \
            console-setup \
            freevo_xserver \
            freevo_recordserver \
            freevo_webserver \
            freevo_rssserver \
            freevo_encodingserver; do
    chroot $tmptargetsquashdir update-rc.d -f $s remove
done
# nasty trick to let freevo shutdown the PC from the user 'freevo'
chmod o+s $tmptargetsquashdir/sbin/{initctl,shutdown,reboot}

# just make sure freevo has all the permissions
chroot $tmptargetsquashdir chown -R freevo /home/freevo

###############################################################################
#
# cleanup from here. Freevo is a blackbox :-)
#
###############################################################################

cleanup_unneeded_packages "$distro"

# deinstallation of grub doesn't remove those:
chroot $tmptargetsquashdir rm -rf /etc/event.d/last-good-boot
chroot $tmptargetsquashdir rm -rf /etc/kernel/prerm.d/last-good-boot


# remove nvidia related needed build stuff, we're not going to build things on
# the freevo anymore :-). This will break apt-get. We can't remove it with
# apt-get, however it removed glx, and I want that one for lot's of stuff..
chroot $tmptargetsquashdir dpkg --force-all -r \
    gcc gcc-4.3 cpp cpp-4.3 libc6-dev make nvidia-180-kernel-source \
    dkms linux-libc-dev wireless-crda

chroot $tmptargetsquashdir dpkg --force-all -r \
    libxine1-x xine-ui libxine1-misc-plugins libxine1-ffmpeg \
    libxine1-console libxine1-bin libxine1 console-terminus console-setup

# perl only used for fontconfig, and even then, only for docs@install as far as
# I can see?! Having 2 vm's (python and perl) eats diskspace: remove perl, as
# freevo is made in pygame/python which is cool. Sad to remove my mother tongue
# though ;-). Also, we remove the kernel + image (modules), as they are
# allready 'built' for the live iso part.
chroot $tmptargetsquashdir bash -c '
    for f in `dpkg -l|grep "^ii"|grep "perl\|linux-headers\|linux-image"|awk "{print \\$2}"`; do 
        dpkg --force-all -r $f
    done
'

# hard remove some stuff we never will need ;-)
chroot $tmptargetsquashdir rm -rf /var/lib/dkms
chroot $tmptargetsquashdir rm -rf /usr/src
chroot $tmptargetsquashdir rm -rf /usr/games
chroot $tmptargetsquashdir rm -rf /usr/share/doc
chroot $tmptargetsquashdir rm -rf /usr/share/man
chroot $tmptargetsquashdir rm -rf /usr/share/man-db
chroot $tmptargetsquashdir rm -rf /lib/modules
